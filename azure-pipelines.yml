# Azure Pipelines YAML for Java + Maven + SonarQube

trigger:
  branches:
    include:
      - main

# Run CI on pull requests targeting main
pr:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  mavenOpts: "-Xmx3072m"
  javaVersion: "17"

stages:
- stage: Build_Test_Scan
  displayName: "Build, Test & Sonar Scan"
  jobs:
  - job: MavenBuild
    displayName: "Maven Build + Test + SonarQube"
    steps:

    # 1) Prepare SonarQube
    - task: SonarQubePrepare@5
      displayName: "Prepare SonarQube Analysis"
      inputs:
        SonarQube: "SonarQube Server local connection"   # ðŸ‘ˆ must match your service connection name exactly
        scannerMode: "Other"
        configMode: "manual"
        extraProperties: |
          sonar.projectKey=aks-java-api
          sonar.projectName=aks-java-api
          sonar.sourceEncoding=UTF-8
          sonar.java.source=17
          sonar.coverage.jacoco.xmlReportPaths=**/jacoco*.xml

    # 2) Build + Test (creates JaCoCo report if plugin added in pom.xml)
    - task: Maven@4
      displayName: "Maven clean verify (tests + JaCoCo)"
      inputs:
        mavenPomFile: "pom.xml"
        goals: "clean verify"
        options: "-Dmaven.test.failure.ignore=false"
        publishJUnitResults: true
        testResultsFiles: "**/surefire-reports/TEST-*.xml"
        codeCoverageToolOption: JaCoCo
        javaHomeOption: "JDKVersion"
        jdkVersionOption: "1.17"
        mavenOptions: "$(mavenOpts)"

    # 3) Run SonarQube Analysis
    - task: SonarQubeAnalyze@5
      displayName: "Run SonarQube Analysis"

    # 4) Publish Quality Gate
    - task: SonarQubePublish@5
      displayName: "Publish Quality Gate Result"
      inputs:
        pollingTimeoutSec: "300"
